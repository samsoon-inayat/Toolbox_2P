function raster_properties

% general for all properties including responsivity, response fidelity, zMI, Rs
ntrials = 50;
si = [C1_t_D C2_t_D C3_t_D C4_t_D];
%     si = [C1_i_T C2_i_T C3_i_T C4_i_T];
Rs_C = oC.Rs(:,si); Rs_A = oA.Rs(:,si); mRs_C = oC.mR(:,si); mRs_A = oA.mR(:,si);
props_C = get_props_Rs(oC.Rs(:,si),ntrials); props_A = get_props_Rs(oA.Rs(:,si),ntrials);
% pop_var_name = {'all','vals','valsT','Nvals','good_zMI','Ngood_zMI'};
pop_var_name = {'good_zMI','good_Gauss','good_MFR'};
pop_var_name = {'all'};
% pop_var_name = {'vals'};
% pop_var_name = {'vals','good_zMI'};
sel_pop_C = cell_list_op(props_C,pop_var_name); sel_pop_A = cell_list_op(props_A,pop_var_name);
pop_var_name = {'Nvals'};
sel_pop_CNR = cell_list_op(props_C,pop_var_name); sel_pop_ANR = cell_list_op(props_A,pop_var_name);


pop_var_name = {'vals'};
rsel_pop_C = cell_list_op(props_C,pop_var_name); rsel_pop_A = cell_list_op(props_A,pop_var_name);

cell_types = {'C1','C2','C3','C4'};
bins = [0 50 100 150]; 
bins = [0 150];
nbins = length(bins)-1;
%     sel_pop_C = bin_cells(props_C.peak_locations,bins,sel_pop_C); sel_pop_A = bin_cells(props_A.peak_locations,bins,sel_pop_A);
if nbins > 1
%     [sel_pop_C,perc_C] = bin_cells(props_C.peak_locations,bins,sel_pop_C); [sel_pop_A,perc_A] = bin_cells(props_A.peak_locations,bins,sel_pop_A);
    [sel_pop_C,perc_C] = bin_cells(props_C.centersD,bins,sel_pop_C); [sel_pop_A,perc_A] = bin_cells(props_A.centersD,bins,sel_pop_A);
    ind = 1;
    for ii = 1:4
        for jj = 1:nbins
            temp_tcolors{ind} = mData.colors{ii};
            ind = ind + 1;
        end
    end
end
%     
mean_var_C = [];mean_var_A = [];

params = {'perc','N_Resp_Trials','zMI','rs','nan_zMI','nan_rs','HaFD','HiFD','PWs','centers','peak_locations','mean_FR','MFR'};
varT = 3;%:length(params)
for pii = varT
    if pii == 1
        mean_var_C = exec_fun_on_cell_mat(sel_pop_C,'percent'); mean_var_A = exec_fun_on_cell_mat(sel_pop_A,'percent');
    else
        eval(sprintf('var_C = get_vals(props_C.%s,sel_pop_C);',params{pii})); eval(sprintf('var_A = get_vals(props_A.%s,sel_pop_A);',params{pii}));
        if pii == 5 || pii == 6
            mean_var_C = exec_fun_on_cell_mat(sel_pop_C,'percent'); mean_var_A = exec_fun_on_cell_mat(sel_pop_A,'percent'); 
        else
            mean_var_C = exec_fun_on_cell_mat(var_C,'nanmean'); mean_var_A = exec_fun_on_cell_mat(var_A,'nanmean'); 
        end
    end
end
if nbins == 1
    varC = mean_var_C;
    varA = mean_var_A;
    [within,dvn,xlabels] = make_within_table({'Cond'},[4]);
    dataT = make_between_table({varC;varA},dvn);
    ra = RMA(dataT,within,{0.05,{'bonferroni'}});
    ra.ranova
else
    varC = mean_var_C;
    varA = mean_var_A;
    [within,dvn,xlabels] = make_within_table({'Cond','Bin'},[4,nbins]);
    dataT = make_between_table({varC;varA},dvn);
    ra = RMA(dataT,within,{0.05,{'bonferroni'}});
    ra.ranova
end
print_for_manuscript(ra)

%%
combs = {[1 2],[2 3],[3 4]}; dp = [];
for ani = 1:5
    for ii = 1:length(combs)
        tcomb = combs{ii};
        tC = cell_list_op(rsel_pop_C(ani,combs{ii}),[],'and',1); tA = cell_list_op(rsel_pop_A(ani,combs{ii}),[],'and',1);
        tvC1 = var_C{ani,tcomb(1)}; tvC2 = var_C{ani,tcomb(2)}; tvA1 = var_A{ani,tcomb(1)}; tvA2 = var_A{ani,tcomb(2)};
        p1C = tvC1(tC{1}); p2C = tvC2(tC{1}); p1A = tvA1(tA{1}); p2A = tvA2(tA{1});
        dpC{ani,ii} = p2C-p1C; dpA{ani,ii} = p2A-p1A;
        numC(ani,ii) = length(p1C); numA(ani,ii) = length(p1A);
        totC(ani,ii) = length(tC{1}); totA(ani,ii) = length(tA{1});
    end
end

varC = 100 * numC./totC;
varA = 100 * numA./totA;
varC = exec_fun_on_cell_mat(dpC,'mean');
varA = exec_fun_on_cell_mat(dpA,'mean');
[within,dvn,xlabels] = make_within_table({'Cond'},[3]);
dataT = make_between_table({varC;varA},dvn);
ra = RMA(dataT,within,{0.05,{'hsd'}});
ra.ranova
print_for_manuscript(ra)
